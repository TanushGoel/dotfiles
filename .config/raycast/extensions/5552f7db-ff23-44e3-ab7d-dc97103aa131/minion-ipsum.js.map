{
  "version": 3,
  "sources": ["../src/minion-ipsum.tsx", "../src/utils.tsx"],
  "sourcesContent": ["import { generateMinionIpsum, produceOutput } from \"./utils\";\n\ntype LoremIpsumArguments = {\n  numberOfParagraphs?: string;\n};\n\nexport default async function ParagraphCommand(props?: { arguments: LoremIpsumArguments }) {\n  const numberOfParagraphs = props?.arguments?.numberOfParagraphs ? parseInt(props.arguments.numberOfParagraphs) : 1;\n  const output = generateMinionIpsum({ numberOfParagraphs });\n\n  await produceOutput(output);\n}\n", "import { closeMainWindow, Clipboard, showHUD, getPreferenceValues } from \"@raycast/api\";\n\nconst minionWords: string[] = [\n  \"pepete\",\n  \"aaaaaah\",\n  \"uuuhhh\",\n  \"jiji\",\n  \"hahaha\",\n  \"jeje\",\n  \"wiiiii\",\n  \"bananaaaa\",\n  \"bappleees\",\n  \"potatoooo\",\n  \"para t\u00FA\",\n  \"la bodaaa\",\n  \"poulet tikka masala\",\n  \"daa\",\n  \"hana dul sae\",\n  \"belloo!\",\n  \"poopayee\",\n  \"tank yuuu!\",\n  \"me want bananaaa!\",\n  \"underweaaar\",\n  \"bee do bee do bee do\",\n  \"tulaliloo\",\n  \"ti aamoo!\",\n  \"tatata bala tu\",\n  \"baboiii\",\n  \"po kass\",\n  \"gelatooo\",\n  \"butt\",\n  \"chasy\",\n];\n\ninterface MinionIpsumParams {\n  numberOfParagraphs?: number;\n  sentencesPerParagraph?: number;\n  wordsPerSentence?: number;\n}\n\nfunction getRandomWord(): string {\n  const randIndex = Math.floor(Math.random() * minionWords.length);\n  return minionWords[randIndex];\n}\n\nfunction capitalizeFirstLetter(s: string): string {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n\nexport function generateMinionIpsum({\n  numberOfParagraphs = 4,\n  sentencesPerParagraph = 5,\n  wordsPerSentence = 6,\n}: MinionIpsumParams = {}): string {\n  const result = [];\n\n  for (let i = 0; i < numberOfParagraphs; i++) {\n    const paragraph = [];\n    for (let j = 0; j < sentencesPerParagraph; j++) {\n      const sentence = [];\n      for (let k = 0; k < wordsPerSentence; k++) {\n        sentence.push(getRandomWord());\n      }\n      paragraph.push(capitalizeFirstLetter(sentence.join(\" \")) + \".\");\n    }\n    result.push(capitalizeFirstLetter(paragraph.join(\" \")));\n  }\n\n  return result.join(\"\\n\\n\");\n}\n\nexport const produceOutput = async (content: string) => {\n  const { action: preference = \"clipboard\" } = getPreferenceValues();\n\n  switch (preference) {\n    case \"clipboard\":\n      await Clipboard.copy(content);\n      showHUD(\"Copied to clipboard! \uD83D\uDCCB\");\n      break;\n\n    case \"paste\":\n      await Clipboard.paste(content);\n      showHUD(\"Pasted to active app! \uD83D\uDCDD\");\n      break;\n  }\n\n  await closeMainWindow();\n};\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GCAA,IAAAI,EAAyE,wBAEnEC,EAAwB,CAC5B,SACA,UACA,SACA,OACA,SACA,OACA,SACA,YACA,YACA,YACA,aACA,YACA,sBACA,MACA,eACA,UACA,WACA,aACA,oBACA,cACA,uBACA,YACA,YACA,iBACA,UACA,UACA,WACA,OACA,OACF,EAQA,SAASC,GAAwB,CAC/B,IAAMC,EAAY,KAAK,MAAM,KAAK,OAAO,EAAIF,EAAY,MAAM,EAC/D,OAAOA,EAAYE,CAAS,CAC9B,CAEA,SAASC,EAAsBC,EAAmB,CAChD,OAAOA,EAAE,OAAO,CAAC,EAAE,YAAY,EAAIA,EAAE,MAAM,CAAC,CAC9C,CAEO,SAASC,EAAoB,CAClC,mBAAAC,EAAqB,EACrB,sBAAAC,EAAwB,EACxB,iBAAAC,EAAmB,CACrB,EAAuB,CAAC,EAAW,CACjC,IAAMC,EAAS,CAAC,EAEhB,QAASC,EAAI,EAAGA,EAAIJ,EAAoBI,IAAK,CAC3C,IAAMC,EAAY,CAAC,EACnB,QAASC,EAAI,EAAGA,EAAIL,EAAuBK,IAAK,CAC9C,IAAMC,EAAW,CAAC,EAClB,QAASC,EAAI,EAAGA,EAAIN,EAAkBM,IACpCD,EAAS,KAAKZ,EAAc,CAAC,EAE/BU,EAAU,KAAKR,EAAsBU,EAAS,KAAK,GAAG,CAAC,EAAI,GAAG,EAEhEJ,EAAO,KAAKN,EAAsBQ,EAAU,KAAK,GAAG,CAAC,CAAC,EAGxD,OAAOF,EAAO,KAAK;AAAA;AAAA,CAAM,CAC3B,CAEO,IAAMM,EAAgB,MAAOC,GAAoB,CACtD,GAAM,CAAE,OAAQC,EAAa,WAAY,KAAI,uBAAoB,EAEjE,OAAQA,EAAY,CAClB,IAAK,YACH,MAAM,YAAU,KAAKD,CAAO,KAC5B,WAAQ,gCAAyB,EACjC,MAEF,IAAK,QACH,MAAM,YAAU,MAAMA,CAAO,KAC7B,WAAQ,iCAA0B,EAClC,KACJ,CAEA,QAAM,mBAAgB,CACxB,EDjFA,eAAOE,EAAwCC,EAA4C,CACzF,IAAMC,EAAqBD,GAAO,WAAW,mBAAqB,SAASA,EAAM,UAAU,kBAAkB,EAAI,EAC3GE,EAASC,EAAoB,CAAE,mBAAAF,CAAmB,CAAC,EAEzD,MAAMG,EAAcF,CAAM,CAC5B",
  "names": ["minion_ipsum_exports", "__export", "ParagraphCommand", "__toCommonJS", "import_api", "minionWords", "getRandomWord", "randIndex", "capitalizeFirstLetter", "s", "generateMinionIpsum", "numberOfParagraphs", "sentencesPerParagraph", "wordsPerSentence", "result", "i", "paragraph", "j", "sentence", "k", "produceOutput", "content", "preference", "ParagraphCommand", "props", "numberOfParagraphs", "output", "generateMinionIpsum", "produceOutput"]
}
